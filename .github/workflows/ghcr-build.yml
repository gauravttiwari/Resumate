name: Build and publish Docker image to GHCR

# NOTE: This workflow builds the server Docker image and pushes it to GitHub
# Container Registry (GHCR). To enable publishing you must allow the
# GITHUB_TOKEN to write packages in the repository settings, or replace
# the login step to use a personal access token stored in
# Settings -> Secrets (e.g. GHCR_PAT) with package write permission.

on:
  push:
    branches:
      - main
      - 'deploy/**'

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js for client build
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Build client
        working-directory: ./client
        run: |
          npm ci
          npm run build

      - name: Build and push Docker image to GHCR
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./server/Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/resumate:${{ github.sha }}
          # optional latest tag
          metadata: |
            {"org.opencontainers.image.revision":"${{ github.sha }}"}
        env:
          # The default GITHUB_TOKEN can be used if repository/package permissions
          # are enabled. Otherwise set a GHCR_PAT secret with package:write scope.
          # Example: secrets.GHCR_PAT
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload client build artifact
        uses: actions/upload-artifact@v4
        with:
          name: client-build
          path: client/build

  # Optional: you can add another job to deploy the pushed image to your hosting
  # provider (SSH, Kubernetes, Render, etc.). That step requires provider
  # credentials as repository secrets and depends on your chosen host.
