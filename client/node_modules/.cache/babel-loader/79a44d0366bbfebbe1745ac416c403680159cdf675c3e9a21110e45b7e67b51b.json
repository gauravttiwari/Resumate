{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\OneDrive\\\\Desktop\\\\resumate\\\\client\\\\src\\\\ProProfileResume.js\";\n/**\r\n * ProProfile - Elegant Corporate Resume Template\r\n * \r\n * A professional two-column template designed for corporate environments\r\n * featuring a dark sidebar with core competencies and a clean main section\r\n * for experience and education. ATS-friendly and print-optimized.\r\n */\nimport React from 'react';\nimport './styles/ProProfile.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProProfileResume = /*#__PURE__*/React.forwardRef(_c = ({\n  data,\n  showProfile = true\n}, ref) => {\n  // Destructure resume data with defaults\n  const {\n    name = '',\n    email = '',\n    phone = '',\n    address = '',\n    linkedin = '',\n    github = '',\n    website = '',\n    summary = '',\n    skills = '',\n    technicalSkills = '',\n    softSkills = '',\n    certifications = [],\n    experience = [],\n    projects = [],\n    education = [],\n    achievements = [],\n    profilePic = null,\n    sidebarColor = '#1a365d' // Default dark blue color\n  } = data || {};\n\n  // Format skills into arrays\n  const formatSkillsList = skillsString => {\n    if (!skillsString) return [];\n    return skillsString.split(',').map(skill => skill.trim()).filter(Boolean);\n  };\n  const technicalSkillsList = formatSkillsList(technicalSkills);\n  const softSkillsList = formatSkillsList(softSkills);\n  const generalSkillsList = formatSkillsList(skills);\n\n  // Combine all skills\n  const allSkills = [...generalSkillsList, ...technicalSkillsList, ...softSkillsList];\n\n  // Create a professional headline from the most recent job title\n  const professionalHeadline = experience && experience.length > 0 ? experience[0].role : 'Professional';\n\n  // Create styles object with dynamic colors for headers\n  const dynamicStyles = {\n    sidebar: {\n      backgroundColor: sidebarColor\n    },\n    heading: {\n      color: sidebarColor\n    },\n    borderBottom: {\n      borderBottom: `2px solid ${sidebarColor}`\n    }\n  };\n\n  // Group skills into core competencies\n  // Each group will have an icon and up to 3 skills\n  const createCompetencyGroups = skills => {\n    if (!skills || skills.length === 0) return [];\n    const icons = ['📊', '🌟', '⚡', '🔄', '📈', '🛠️', '🔍', '💼'];\n    const competencies = [{\n      name: 'Process Improvement',\n      icon: '📊',\n      skills: []\n    }, {\n      name: 'Leadership',\n      icon: '🌟',\n      skills: []\n    }, {\n      name: 'Risk Management',\n      icon: '⚡',\n      skills: []\n    }, {\n      name: 'Innovation',\n      icon: '💡',\n      skills: []\n    }, {\n      name: 'Technical',\n      icon: '🛠️',\n      skills: []\n    }, {\n      name: 'Analytics',\n      icon: '📈',\n      skills: []\n    }];\n\n    // Distribute skills among competency groups\n    skills.forEach((skill, index) => {\n      const groupIndex = index % competencies.length;\n      competencies[groupIndex].skills.push(skill);\n    });\n\n    // Only return groups that have skills\n    return competencies.filter(group => group.skills.length > 0);\n  };\n  const competencyGroups = createCompetencyGroups(allSkills);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    className: \"template-proprofile\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"sidebar\",\n      style: dynamicStyles.sidebar,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"name\",\n        children: name.toUpperCase()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), profilePic && showProfile && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-pic\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: profilePic,\n          alt: \"Profile\",\n          crossOrigin: \"anonymous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), allSkills.length > 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"skills\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"SKILLS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"skills-list\",\n          children: allSkills.map((skill, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"skill-item\",\n            children: [skill, index < allSkills.length - 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"separator\",\n              children: \"\\u2022\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 52\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), certifications.length > 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"certifications\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"CERTIFICATION\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), certifications.map((cert, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: cert\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), competencyGroups.length > 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"competencies\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"CORE COMPETENCIES\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this), competencyGroups.map((group, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"competency-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"competency-icon\",\n              children: group.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"competency-name\",\n              children: group.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"competency-skills\",\n            children: group.skills.map((skill, skillIndex) => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"competency-skill\",\n              children: skill\n            }, skillIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this), achievements.length > 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"achievements\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"ACHIEVEMENTS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: achievements.map((achievement, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: achievement\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"headline\",\n        style: dynamicStyles.heading,\n        children: professionalHeadline.toUpperCase()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"contact-info\",\n        children: [phone && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"icon\",\n            children: \"\\uD83D\\uDCDE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 24\n          }, this), \" \", phone]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this), email && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"icon\",\n            children: \"\\u2709\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 24\n          }, this), \" \", email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this), address && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"icon\",\n            children: \"\\uD83D\\uDCCD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 26\n          }, this), \" \", address]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 23\n        }, this), linkedin && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"icon\",\n            children: \"\\uD83D\\uDD17\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 27\n          }, this), \" \", linkedin]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 24\n        }, this), github && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"icon\",\n            children: \"\\uD83D\\uDCBB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 25\n          }, this), \" \", github]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 22\n        }, this), website && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"icon\",\n            children: \"\\uD83C\\uDF10\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 26\n          }, this), \" \", website]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), summary && /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"summary\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            ...dynamicStyles.heading,\n            ...dynamicStyles.borderBottom\n          },\n          children: \"SUMMARY\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: summary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this), experience && experience.length > 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"experience\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            ...dynamicStyles.heading,\n            ...dynamicStyles.borderBottom\n          },\n          children: \"EXPERIENCE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this), experience.sort((a, b) => {\n          // Try to parse years from duration strings\n          const getEndYear = duration => {\n            const match = (duration === null || duration === void 0 ? void 0 : duration.match(/\\d{4}/)) || [''];\n            return parseInt(match[0] || '0');\n          };\n          return getEndYear(b.duration) - getEndYear(a.duration);\n        }).map((job, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"experience-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [job.role || 'Position', \" | \", job.company || 'Company']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"duration-location\",\n            children: [job.duration || 'Duration', \" | \", job.location || 'Location']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"job-description\",\n            children: job.description.split('.').filter(item => item.trim()).map((point, pointIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [point.trim(), \".\"]\n            }, pointIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this), projects && projects.length > 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"projects\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            ...dynamicStyles.heading,\n            ...dynamicStyles.borderBottom\n          },\n          children: \"PROJECTS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this), projects.map((project, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"project-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: project.title || 'Project'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: project.description || 'Project description'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }, this), education && education.length > 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"education\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            ...dynamicStyles.heading,\n            ...dynamicStyles.borderBottom\n          },\n          children: \"EDUCATION\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this), education.map((edu, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"education-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"institution\",\n            children: edu.institution || 'Institution'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"degree\",\n            children: [edu.degree || 'Degree', \" \", edu.year ? `- ${edu.year}` : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n});\n_c2 = ProProfileResume;\nexport default ProProfileResume;\nvar _c, _c2;\n$RefreshReg$(_c, \"ProProfileResume$React.forwardRef\");\n$RefreshReg$(_c2, \"ProProfileResume\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ProProfileResume","forwardRef","_c","data","showProfile","ref","name","email","phone","address","linkedin","github","website","summary","skills","technicalSkills","softSkills","certifications","experience","projects","education","achievements","profilePic","sidebarColor","formatSkillsList","skillsString","split","map","skill","trim","filter","Boolean","technicalSkillsList","softSkillsList","generalSkillsList","allSkills","professionalHeadline","length","role","dynamicStyles","sidebar","backgroundColor","heading","color","borderBottom","createCompetencyGroups","icons","competencies","icon","forEach","index","groupIndex","push","group","competencyGroups","className","children","style","toUpperCase","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","crossOrigin","cert","skillIndex","achievement","sort","a","b","getEndYear","duration","match","parseInt","job","company","location","description","item","point","pointIndex","project","title","edu","institution","degree","year","_c2","$RefreshReg$"],"sources":["C:/Users/dell/OneDrive/Desktop/resumate/client/src/ProProfileResume.js"],"sourcesContent":["/**\r\n * ProProfile - Elegant Corporate Resume Template\r\n * \r\n * A professional two-column template designed for corporate environments\r\n * featuring a dark sidebar with core competencies and a clean main section\r\n * for experience and education. ATS-friendly and print-optimized.\r\n */\r\nimport React from 'react';\r\nimport './styles/ProProfile.css';\r\n\r\nconst ProProfileResume = React.forwardRef(({ data, showProfile = true }, ref) => {\r\n  // Destructure resume data with defaults\r\n  const { \r\n    name = '', \r\n    email = '', \r\n    phone = '', \r\n    address = '',\r\n    linkedin = '',\r\n    github = '',\r\n    website = '',\r\n    summary = '',\r\n    skills = '',\r\n    technicalSkills = '',\r\n    softSkills = '',\r\n    certifications = [],\r\n    experience = [],\r\n    projects = [],\r\n    education = [],\r\n    achievements = [],\r\n    profilePic = null,\r\n    sidebarColor = '#1a365d' // Default dark blue color\r\n  } = data || {};\r\n\r\n  // Format skills into arrays\r\n  const formatSkillsList = (skillsString) => {\r\n    if (!skillsString) return [];\r\n    return skillsString.split(',').map(skill => skill.trim()).filter(Boolean);\r\n  };\r\n\r\n  const technicalSkillsList = formatSkillsList(technicalSkills);\r\n  const softSkillsList = formatSkillsList(softSkills);\r\n  const generalSkillsList = formatSkillsList(skills);\r\n  \r\n  // Combine all skills\r\n  const allSkills = [...generalSkillsList, ...technicalSkillsList, ...softSkillsList];\r\n\r\n  // Create a professional headline from the most recent job title\r\n  const professionalHeadline = experience && experience.length > 0 \r\n    ? experience[0].role \r\n    : 'Professional';\r\n\r\n  // Create styles object with dynamic colors for headers\r\n  const dynamicStyles = {\r\n    sidebar: {\r\n      backgroundColor: sidebarColor\r\n    },\r\n    heading: {\r\n      color: sidebarColor\r\n    },\r\n    borderBottom: {\r\n      borderBottom: `2px solid ${sidebarColor}`\r\n    }\r\n  };\r\n\r\n  // Group skills into core competencies\r\n  // Each group will have an icon and up to 3 skills\r\n  const createCompetencyGroups = (skills) => {\r\n    if (!skills || skills.length === 0) return [];\r\n    \r\n    const icons = ['📊', '🌟', '⚡', '🔄', '📈', '🛠️', '🔍', '💼'];\r\n    const competencies = [\r\n      { name: 'Process Improvement', icon: '📊', skills: [] },\r\n      { name: 'Leadership', icon: '🌟', skills: [] },\r\n      { name: 'Risk Management', icon: '⚡', skills: [] },\r\n      { name: 'Innovation', icon: '💡', skills: [] },\r\n      { name: 'Technical', icon: '🛠️', skills: [] },\r\n      { name: 'Analytics', icon: '📈', skills: [] }\r\n    ];\r\n    \r\n    // Distribute skills among competency groups\r\n    skills.forEach((skill, index) => {\r\n      const groupIndex = index % competencies.length;\r\n      competencies[groupIndex].skills.push(skill);\r\n    });\r\n    \r\n    // Only return groups that have skills\r\n    return competencies.filter(group => group.skills.length > 0);\r\n  };\r\n  \r\n  const competencyGroups = createCompetencyGroups(allSkills);\r\n\r\n  return (\r\n    <div ref={ref} className=\"template-proprofile\">\r\n      {/* Left Sidebar */}\r\n      <aside className=\"sidebar\" style={dynamicStyles.sidebar}>\r\n        {/* Full Name */}\r\n        <h1 className=\"name\">{name.toUpperCase()}</h1>\r\n        \r\n        {/* Profile Picture - Optional */}\r\n        {profilePic && showProfile && (\r\n          <div className=\"profile-pic\">\r\n            <img src={profilePic} alt=\"Profile\" crossOrigin=\"anonymous\" />\r\n          </div>\r\n        )}\r\n        \r\n        {/* Skills Section */}\r\n        {allSkills.length > 0 && (\r\n          <section className=\"skills\">\r\n            <h2>SKILLS</h2>\r\n            <div className=\"skills-list\">\r\n              {allSkills.map((skill, index) => (\r\n                <span key={index} className=\"skill-item\">\r\n                  {skill}\r\n                  {index < allSkills.length - 1 && <span className=\"separator\">•</span>}\r\n                </span>\r\n              ))}\r\n            </div>\r\n          </section>\r\n        )}\r\n        \r\n        {/* Certifications Section */}\r\n        {certifications.length > 0 && (\r\n          <section className=\"certifications\">\r\n            <h2>CERTIFICATION</h2>\r\n            {certifications.map((cert, index) => (\r\n              <p key={index}>{cert}</p>\r\n            ))}\r\n          </section>\r\n        )}\r\n        \r\n        {/* Core Competencies Section */}\r\n        {competencyGroups.length > 0 && (\r\n          <section className=\"competencies\">\r\n            <h2>CORE COMPETENCIES</h2>\r\n            {competencyGroups.map((group, index) => (\r\n              <div key={index} className=\"competency-group\">\r\n                <p>\r\n                  <span className=\"competency-icon\">{group.icon}</span>\r\n                  <span className=\"competency-name\">{group.name}</span>\r\n                </p>\r\n                <div className=\"competency-skills\">\r\n                  {group.skills.map((skill, skillIndex) => (\r\n                    <span key={skillIndex} className=\"competency-skill\">\r\n                      {skill}\r\n                    </span>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </section>\r\n        )}\r\n        \r\n        {/* Achievements can go in sidebar if there's space */}\r\n        {achievements.length > 0 && (\r\n          <section className=\"achievements\">\r\n            <h2>ACHIEVEMENTS</h2>\r\n            <ul>\r\n              {achievements.map((achievement, index) => (\r\n                <li key={index}>{achievement}</li>\r\n              ))}\r\n            </ul>\r\n          </section>\r\n        )}\r\n      </aside>\r\n      \r\n      {/* Main Content */}\r\n      <main className=\"main-content\">\r\n        {/* Professional Headline */}\r\n        <h2 className=\"headline\" style={dynamicStyles.heading}>\r\n          {professionalHeadline.toUpperCase()}\r\n        </h2>\r\n        \r\n        {/* Contact Information */}\r\n        <header className=\"contact-info\">\r\n          {phone && <p><span className=\"icon\">📞</span> {phone}</p>}\r\n          {email && <p><span className=\"icon\">✉️</span> {email}</p>}\r\n          {address && <p><span className=\"icon\">📍</span> {address}</p>}\r\n          {linkedin && <p><span className=\"icon\">🔗</span> {linkedin}</p>}\r\n          {github && <p><span className=\"icon\">💻</span> {github}</p>}\r\n          {website && <p><span className=\"icon\">🌐</span> {website}</p>}\r\n        </header>\r\n        \r\n        {/* Summary Section */}\r\n        {summary && (\r\n          <section className=\"summary\">\r\n            <h2 style={{...dynamicStyles.heading, ...dynamicStyles.borderBottom}}>SUMMARY</h2>\r\n            <p>{summary}</p>\r\n          </section>\r\n        )}\r\n        \r\n        {/* Experience Section */}\r\n        {experience && experience.length > 0 && (\r\n          <section className=\"experience\">\r\n            <h2 style={{...dynamicStyles.heading, ...dynamicStyles.borderBottom}}>EXPERIENCE</h2>\r\n            \r\n            {/* Sort by most recent first */}\r\n            {experience.sort((a, b) => {\r\n              // Try to parse years from duration strings\r\n              const getEndYear = (duration) => {\r\n                const match = duration?.match(/\\d{4}/) || [''];\r\n                return parseInt(match[0] || '0');\r\n              };\r\n              return getEndYear(b.duration) - getEndYear(a.duration);\r\n            }).map((job, index) => (\r\n              <div key={index} className=\"experience-item\">\r\n                <h3>{job.role || 'Position'} | {job.company || 'Company'}</h3>\r\n                <span className=\"duration-location\">\r\n                  {job.duration || 'Duration'} | {job.location || 'Location'}\r\n                </span>\r\n                <ul className=\"job-description\">\r\n                  {job.description.split('.').filter(item => item.trim()).map((point, pointIndex) => (\r\n                    <li key={pointIndex}>{point.trim()}.</li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            ))}\r\n          </section>\r\n        )}\r\n        \r\n        {/* Projects Section - If provided */}\r\n        {projects && projects.length > 0 && (\r\n          <section className=\"projects\">\r\n            <h2 style={{...dynamicStyles.heading, ...dynamicStyles.borderBottom}}>PROJECTS</h2>\r\n            {projects.map((project, index) => (\r\n              <div key={index} className=\"project-item\">\r\n                <h3>{project.title || 'Project'}</h3>\r\n                <p>{project.description || 'Project description'}</p>\r\n              </div>\r\n            ))}\r\n          </section>\r\n        )}\r\n        \r\n        {/* Education Section */}\r\n        {education && education.length > 0 && (\r\n          <section className=\"education\">\r\n            <h2 style={{...dynamicStyles.heading, ...dynamicStyles.borderBottom}}>EDUCATION</h2>\r\n            {education.map((edu, index) => (\r\n              <div key={index} className=\"education-item\">\r\n                <p className=\"institution\">{edu.institution || 'Institution'}</p>\r\n                <p className=\"degree\">{edu.degree || 'Degree'} {edu.year ? `- ${edu.year}` : ''}</p>\r\n              </div>\r\n            ))}\r\n          </section>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default ProProfileResume;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}