{"ast":null,"code":"// LaTeX template validation helper\n\n/**\r\n * Validates if a LaTeX string contains required document structure elements\r\n * @param {string} latex - The LaTeX content to validate\r\n * @returns {Object} - Validation results\r\n */\nexport const validateLatexTemplate = latex => {\n  if (!latex || typeof latex !== 'string') {\n    return {\n      isValid: false,\n      errors: ['Template is empty or not a string']\n    };\n  }\n  const errors = [];\n  const warnings = [];\n\n  // Required elements\n  if (!latex.includes('\\\\begin{document}')) {\n    errors.push('Missing \\\\begin{document} tag');\n  }\n  if (!latex.includes('\\\\end{document}')) {\n    errors.push('Missing \\\\end{document} tag');\n  }\n\n  // Check order of document tags\n  const beginPos = latex.indexOf('\\\\begin{document}');\n  const endPos = latex.indexOf('\\\\end{document}');\n  if (beginPos >= 0 && endPos >= 0 && beginPos > endPos) {\n    errors.push('\\\\begin{document} must come before \\\\end{document}');\n  }\n\n  // Check for content before \\begin{document}\n  if (beginPos > 0) {\n    // Extract content before \\begin{document}\n    const preContent = latex.substring(0, beginPos).trim();\n\n    // Check if there's non-comment content that would cause errors\n    const nonCommentLines = preContent.split('\\n').filter(line => {\n      // Skip empty lines and comments\n      const trimmed = line.trim();\n      if (trimmed === '' || trimmed.startsWith('%')) {\n        return false;\n      }\n\n      // Valid preamble commands - most LaTeX commands and environment definitions\n      if (trimmed.startsWith('\\\\') && (trimmed.startsWith('\\\\usepackage') || trimmed.startsWith('\\\\documentclass') || trimmed.startsWith('\\\\title') || trimmed.startsWith('\\\\author') || trimmed.startsWith('\\\\date') || trimmed.startsWith('\\\\newcommand') || trimmed.startsWith('\\\\renewcommand') || trimmed.startsWith('\\\\def') || trimmed.startsWith('\\\\let') || trimmed.startsWith('\\\\input') || trimmed.startsWith('\\\\include') || trimmed.startsWith('\\\\pagestyle'))) {\n        return false;\n      }\n      return true;\n    });\n    if (nonCommentLines.length > 0) {\n      warnings.push('Found non-preamble content before \\\\begin{document} that will cause errors');\n\n      // Add detail about the problematic content\n      if (nonCommentLines.length <= 3) {\n        nonCommentLines.forEach(line => {\n          warnings.push(`Problematic content: \"${line.substring(0, 50)}${line.length > 50 ? '...' : ''}\"`);\n        });\n      } else {\n        warnings.push(`Found ${nonCommentLines.length} lines with potentially problematic content before \\\\begin{document}`);\n      }\n    }\n  }\n\n  // Check for basic package requirements\n  const requiredPackages = ['geometry', 'enumitem'];\n  for (const pkg of requiredPackages) {\n    if (!latex.includes(`\\\\usepackage{${pkg}}`) && !latex.includes(`\\\\usepackage[`)) {\n      warnings.push(`Template may be missing recommended package: ${pkg}`);\n    }\n  }\n  return {\n    isValid: errors.length === 0,\n    errors,\n    warnings,\n    beginDocumentPosition: beginPos,\n    endDocumentPosition: endPos\n  };\n};\n\n/**\r\n * Attempts to fix common issues in LaTeX templates\r\n * @param {string} latex - The LaTeX content to fix\r\n * @returns {Object} - The fixed LaTeX content and list of fixes applied\r\n */\nexport const attemptLatexFix = latex => {\n  if (!latex || typeof latex !== 'string') {\n    return {\n      fixed: false,\n      latex,\n      fixes: ['Cannot fix empty or non-string template']\n    };\n  }\n  let fixedLatex = latex;\n  const fixes = [];\n\n  // Fix 1: Add missing document environment\n  if (!latex.includes('\\\\begin{document}')) {\n    // Find a good position to insert it - after all \\usepackage commands\n    const lastPackagePos = latex.lastIndexOf('\\\\usepackage');\n    if (lastPackagePos > -1) {\n      // Find the end of this line\n      const endOfLine = latex.indexOf('\\n', lastPackagePos);\n      const insertPos = endOfLine > -1 ? endOfLine + 1 : latex.length;\n      fixedLatex = fixedLatex.substring(0, insertPos) + '\\n\\\\begin{document}\\n' + fixedLatex.substring(insertPos);\n      fixes.push('Added missing \\\\begin{document} tag');\n    } else {\n      // No packages found, add at beginning\n      fixedLatex = '\\\\documentclass[11pt,a4paper]{article}\\n\\\\begin{document}\\n' + fixedLatex;\n      fixes.push('Added missing document class and \\\\begin{document} tag');\n    }\n  }\n\n  // Fix 2: Add missing end document\n  if (!fixedLatex.includes('\\\\end{document}')) {\n    fixedLatex = fixedLatex + '\\n\\\\end{document}\\n';\n    fixes.push('Added missing \\\\end{document} tag');\n  }\n\n  // Fix 3: Ensure proper order of begin/end document tags\n  const beginPos = fixedLatex.indexOf('\\\\begin{document}');\n  const endPos = fixedLatex.indexOf('\\\\end{document}');\n  if (beginPos >= 0 && endPos >= 0 && beginPos > endPos) {\n    // Remove the end tag and add it at the end\n    fixedLatex = fixedLatex.replace('\\\\end{document}', '');\n    fixedLatex = fixedLatex + '\\n\\\\end{document}\\n';\n    fixes.push('Fixed incorrect order of document tags');\n  }\n  return {\n    fixed: fixes.length > 0,\n    latex: fixedLatex,\n    fixes\n  };\n};\nexport default {\n  validateLatexTemplate,\n  attemptLatexFix\n};","map":{"version":3,"names":["validateLatexTemplate","latex","isValid","errors","warnings","includes","push","beginPos","indexOf","endPos","preContent","substring","trim","nonCommentLines","split","filter","line","trimmed","startsWith","length","forEach","requiredPackages","pkg","beginDocumentPosition","endDocumentPosition","attemptLatexFix","fixed","fixes","fixedLatex","lastPackagePos","lastIndexOf","endOfLine","insertPos","replace"],"sources":["c:/Users/dell/OneDrive/Desktop/resumate/client/src/latexValidator.js"],"sourcesContent":["// LaTeX template validation helper\r\n\r\n/**\r\n * Validates if a LaTeX string contains required document structure elements\r\n * @param {string} latex - The LaTeX content to validate\r\n * @returns {Object} - Validation results\r\n */\r\nexport const validateLatexTemplate = (latex) => {\r\n  if (!latex || typeof latex !== 'string') {\r\n    return {\r\n      isValid: false,\r\n      errors: ['Template is empty or not a string']\r\n    };\r\n  }\r\n\r\n  const errors = [];\r\n  const warnings = [];\r\n\r\n  // Required elements\r\n  if (!latex.includes('\\\\begin{document}')) {\r\n    errors.push('Missing \\\\begin{document} tag');\r\n  }\r\n\r\n  if (!latex.includes('\\\\end{document}')) {\r\n    errors.push('Missing \\\\end{document} tag');\r\n  }\r\n\r\n  // Check order of document tags\r\n  const beginPos = latex.indexOf('\\\\begin{document}');\r\n  const endPos = latex.indexOf('\\\\end{document}');\r\n  \r\n  if (beginPos >= 0 && endPos >= 0 && beginPos > endPos) {\r\n    errors.push('\\\\begin{document} must come before \\\\end{document}');\r\n  }\r\n\r\n  // Check for content before \\begin{document}\r\n  if (beginPos > 0) {\r\n    // Extract content before \\begin{document}\r\n    const preContent = latex.substring(0, beginPos).trim();\r\n    \r\n    // Check if there's non-comment content that would cause errors\r\n    const nonCommentLines = preContent.split('\\n')\r\n      .filter(line => {\r\n        // Skip empty lines and comments\r\n        const trimmed = line.trim();\r\n        if (trimmed === '' || trimmed.startsWith('%')) {\r\n          return false;\r\n        }\r\n        \r\n        // Valid preamble commands - most LaTeX commands and environment definitions\r\n        if (trimmed.startsWith('\\\\') && \r\n            (trimmed.startsWith('\\\\usepackage') || \r\n             trimmed.startsWith('\\\\documentclass') || \r\n             trimmed.startsWith('\\\\title') ||\r\n             trimmed.startsWith('\\\\author') ||\r\n             trimmed.startsWith('\\\\date') ||\r\n             trimmed.startsWith('\\\\newcommand') ||\r\n             trimmed.startsWith('\\\\renewcommand') ||\r\n             trimmed.startsWith('\\\\def') ||\r\n             trimmed.startsWith('\\\\let') ||\r\n             trimmed.startsWith('\\\\input') ||\r\n             trimmed.startsWith('\\\\include') ||\r\n             trimmed.startsWith('\\\\pagestyle'))) {\r\n          return false;\r\n        }\r\n        \r\n        return true;\r\n      });\r\n      \r\n    if (nonCommentLines.length > 0) {\r\n      warnings.push('Found non-preamble content before \\\\begin{document} that will cause errors');\r\n      \r\n      // Add detail about the problematic content\r\n      if (nonCommentLines.length <= 3) {\r\n        nonCommentLines.forEach(line => {\r\n          warnings.push(`Problematic content: \"${line.substring(0, 50)}${line.length > 50 ? '...' : ''}\"`);\r\n        });\r\n      } else {\r\n        warnings.push(`Found ${nonCommentLines.length} lines with potentially problematic content before \\\\begin{document}`);\r\n      }\r\n    }\r\n  }\r\n\r\n  // Check for basic package requirements\r\n  const requiredPackages = ['geometry', 'enumitem'];\r\n  for (const pkg of requiredPackages) {\r\n    if (!latex.includes(`\\\\usepackage{${pkg}}`) && \r\n        !latex.includes(`\\\\usepackage[`)) {\r\n      warnings.push(`Template may be missing recommended package: ${pkg}`);\r\n    }\r\n  }\r\n\r\n  return {\r\n    isValid: errors.length === 0,\r\n    errors,\r\n    warnings,\r\n    beginDocumentPosition: beginPos,\r\n    endDocumentPosition: endPos\r\n  };\r\n};\r\n\r\n/**\r\n * Attempts to fix common issues in LaTeX templates\r\n * @param {string} latex - The LaTeX content to fix\r\n * @returns {Object} - The fixed LaTeX content and list of fixes applied\r\n */\r\nexport const attemptLatexFix = (latex) => {\r\n  if (!latex || typeof latex !== 'string') {\r\n    return { \r\n      fixed: false, \r\n      latex, \r\n      fixes: ['Cannot fix empty or non-string template'] \r\n    };\r\n  }\r\n\r\n  let fixedLatex = latex;\r\n  const fixes = [];\r\n  \r\n  // Fix 1: Add missing document environment\r\n  if (!latex.includes('\\\\begin{document}')) {\r\n    // Find a good position to insert it - after all \\usepackage commands\r\n    const lastPackagePos = latex.lastIndexOf('\\\\usepackage');\r\n    \r\n    if (lastPackagePos > -1) {\r\n      // Find the end of this line\r\n      const endOfLine = latex.indexOf('\\n', lastPackagePos);\r\n      const insertPos = endOfLine > -1 ? endOfLine + 1 : latex.length;\r\n      \r\n      fixedLatex = fixedLatex.substring(0, insertPos) + \r\n                 '\\n\\\\begin{document}\\n' + \r\n                 fixedLatex.substring(insertPos);\r\n      \r\n      fixes.push('Added missing \\\\begin{document} tag');\r\n    } else {\r\n      // No packages found, add at beginning\r\n      fixedLatex = '\\\\documentclass[11pt,a4paper]{article}\\n\\\\begin{document}\\n' + fixedLatex;\r\n      fixes.push('Added missing document class and \\\\begin{document} tag');\r\n    }\r\n  }\r\n\r\n  // Fix 2: Add missing end document\r\n  if (!fixedLatex.includes('\\\\end{document}')) {\r\n    fixedLatex = fixedLatex + '\\n\\\\end{document}\\n';\r\n    fixes.push('Added missing \\\\end{document} tag');\r\n  }\r\n\r\n  // Fix 3: Ensure proper order of begin/end document tags\r\n  const beginPos = fixedLatex.indexOf('\\\\begin{document}');\r\n  const endPos = fixedLatex.indexOf('\\\\end{document}');\r\n  \r\n  if (beginPos >= 0 && endPos >= 0 && beginPos > endPos) {\r\n    // Remove the end tag and add it at the end\r\n    fixedLatex = fixedLatex.replace('\\\\end{document}', '');\r\n    fixedLatex = fixedLatex + '\\n\\\\end{document}\\n';\r\n    fixes.push('Fixed incorrect order of document tags');\r\n  }\r\n\r\n  return {\r\n    fixed: fixes.length > 0,\r\n    latex: fixedLatex,\r\n    fixes\r\n  };\r\n};\r\n\r\nexport default {\r\n  validateLatexTemplate,\r\n  attemptLatexFix\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}