{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\OneDrive\\\\Desktop\\\\resumate\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport ResumeForm from './ResumeForm';\nimport ResumePreview from './ResumePreview';\nimport TemplateSelector from './TemplateSelector';\nimport latexTemplates from './latexTemplates';\nimport Mustache from 'mustache';\nimport generatePlainText from './plainTextGenerator';\nimport LaTeXInstallGuide from './LaTeXInstallGuide';\nimport generateClientSidePdf from './clientPdfGenerator';\nimport { reportError, reportUsage } from './errorReporting';\nimport { validateLatexTemplate, attemptLatexFix } from './latexValidator';\nimport safeRenderLatex from './safeLatexRenderer';\nimport './App.css';\nimport './LaTeXInstallGuide.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isGenerating, setIsGenerating] = React.useState(false);\n  const [generatedFiles, setGeneratedFiles] = React.useState(null);\n  const [selectedTemplate, setSelectedTemplate] = React.useState('modern');\n  const [theme, setTheme] = React.useState('light');\n  const [formData, setFormData] = React.useState(null);\n  const [showLaTeXGuide, setShowLaTeXGuide] = React.useState(false);\n  const [isLaTeXMissing, setIsLaTeXMissing] = React.useState(false);\n  const [toast, setToast] = React.useState({\n    show: false,\n    message: '',\n    type: 'success'\n  });\n\n  // Handle form data changes for live preview\n  const handleFormChange = data => {\n    setFormData(data);\n  };\n\n  // Handle template selection change\n  const handleTemplateChange = template => {\n    setSelectedTemplate(template);\n  };\n\n  // Toggle between light and dark theme\n  const handleThemeToggle = () => {\n    setTheme(theme === 'light' ? 'dark' : 'light');\n  };\n\n  // Handle closing the LaTeX installation guide\n  const handleCloseLaTeXGuide = () => {\n    setShowLaTeXGuide(false);\n  };\n\n  // Show toast notification\n  const showToast = (message, type = 'success', duration = 5000) => {\n    setToast({\n      show: true,\n      message,\n      type\n    });\n    setTimeout(() => {\n      setToast({\n        show: false,\n        message: '',\n        type: 'success'\n      });\n    }, duration);\n  };\n\n  // Handle using the client-side PDF generator\n  const handleUseClientSidePdf = async () => {\n    try {\n      if (formData) {\n        // Close the LaTeX guide modal\n        setShowLaTeXGuide(false);\n\n        // Show loading indicator\n        setIsGenerating(true);\n\n        // Generate client-side PDF\n        const {\n          pdf\n        } = await generateClientSidePdf(formData);\n\n        // Update generated files with client PDF\n        setGeneratedFiles(prevFiles => ({\n          ...prevFiles,\n          clientPdf: pdf\n        }));\n\n        // Hide loading indicator\n        setIsGenerating(false);\n\n        // Show success toast\n        showToast('Client-side PDF generated successfully!');\n\n        // Open the PDF in a new tab\n        window.open(pdf, '_blank');\n      }\n    } catch (error) {\n      console.error('Failed to generate client-side PDF:', error);\n      showToast('Failed to generate client-side PDF. Please try installing LaTeX instead.', 'danger');\n      setIsGenerating(false);\n    }\n  };\n\n  // Handler for form submission\n  const handleFormSubmit = async formData => {\n    setIsGenerating(true);\n    setFormData(formData); // Update form data for preview\n\n    // Get the selected template\n    const template = latexTemplates[selectedTemplate];\n\n    // Use safe LaTeX rendering to prevent content before \\begin{document}\n    const latex = safeRenderLatex(template, formData);\n\n    // Generate plain text version\n    const plainText = generatePlainText(formData);\n\n    // Validate the LaTeX template before submission\n    const validation = validateLatexTemplate(latex);\n\n    // Log warnings but don't block submission\n    if (validation.warnings.length > 0) {\n      console.warn('LaTeX template warnings:', validation.warnings);\n    }\n\n    // If there are errors, try to fix them automatically\n    if (!validation.isValid) {\n      console.error('LaTeX template validation failed:', validation.errors);\n      reportError('LaTeX template validation failed', {\n        template: selectedTemplate,\n        errors: validation.errors,\n        beginDocPos: validation.beginDocumentPosition,\n        endDocPos: validation.endDocumentPosition\n      });\n\n      // Attempt to fix template issues\n      const fixResult = attemptLatexFix(latex);\n      if (fixResult.fixed) {\n        // Use the fixed template\n        console.log('Template issues automatically fixed:', fixResult.fixes);\n        showToast('Fixed some issues with the resume template', 'info');\n      } else {\n        // If we couldn't fix it, warn the user\n        showToast('There may be issues with the template structure. Trying anyway...', 'warning');\n      }\n    }\n    const filename = formData.name ? formData.name.replace(/\\s+/g, '_') : 'resume';\n\n    // Send LaTeX to backend for PDF generation\n    const res = await fetch('http://localhost:5000/generate', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        latex,\n        filename,\n        plainText,\n        template: selectedTemplate\n      })\n    });\n    if (res.ok) {\n      const {\n        pdf,\n        tex\n      } = await res.json();\n      setGeneratedFiles({\n        pdf: filename,\n        tex: filename,\n        txt: filename\n      });\n      setIsGenerating(false);\n    } else {\n      // Don't immediately try to parse as JSON, get the text first\n      let errorMessage = `Resume generation failed. Server returned status ${res.status}`;\n      try {\n        // Get the response as text\n        const textData = await res.text();\n        console.log('Error response text:', textData);\n        try {\n          // Try to parse as JSON first\n          const errorData = JSON.parse(textData);\n          console.error('JSON error details:', errorData);\n\n          // Special case for LaTeX not installed error\n          if (errorData.error === 'LaTeX not installed') {\n            console.log('LaTeX not installed, showing guide and generating client-side PDF');\n            // Set state to show our installation guide\n            setIsLaTeXMissing(true);\n            setShowLaTeXGuide(true);\n\n            // Generate a client-side fallback PDF\n            try {\n              const result = await generateClientSidePdf(formData);\n              if (result && result.pdf) {\n                // Store generated files information\n                setGeneratedFiles({\n                  tex: filename,\n                  txt: filename,\n                  clientPdf: result.pdf // Store the client-generated PDF URL\n                });\n              }\n            } catch (clientPdfError) {\n              console.error('Failed to generate PDF on client side:', clientPdfError);\n            }\n          }\n          // Special case for \"Missing \\begin{document}\" error\n          else if (errorData.error === 'LaTeX compilation failed' && errorData.details.includes(\"Missing \\\\begin{document}\")) {\n            console.log('LaTeX structure error: Missing \\\\begin{document}');\n\n            // Show more user-friendly error message for document structure issues\n            const errorMessage = `LaTeX Document Structure Error: The resume couldn't be compiled because of a template formatting issue.\n\nThe system is trying to compile a document that doesn't have a proper structure. This is likely a bug in how the template is being generated.`;\n\n            // Show toast with error message and recovery option\n            showToast(/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [errorMessage, /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-sm btn-outline-light\",\n                  onClick: () => {\n                    // Try to fix template and resubmit\n                    const fixResult = attemptLatexFix(latex);\n                    if (fixResult.fixed) {\n                      showToast('Attempting to recover with fixed template...', 'info');\n\n                      // Resubmit with fixed template\n                      fetch('http://localhost:5000/generate', {\n                        method: 'POST',\n                        headers: {\n                          'Content-Type': 'application/json'\n                        },\n                        body: JSON.stringify({\n                          latex: fixResult.latex,\n                          filename,\n                          plainText,\n                          template: selectedTemplate\n                        })\n                      }).then(res => {\n                        if (res.ok) {\n                          return res.json().then(data => {\n                            setGeneratedFiles({\n                              pdf: filename,\n                              tex: filename,\n                              txt: filename\n                            });\n                            showToast('Recovery successful! Resume generated.', 'success');\n                          });\n                        } else {\n                          showToast('Recovery failed. Please try a different template.', 'danger');\n                        }\n                      }).catch(err => {\n                        showToast('Recovery failed. Please try a different template.', 'danger');\n                      });\n                    } else {\n                      showToast('Could not automatically fix the template. Please try a different template.', 'danger');\n                    }\n                  },\n                  children: \"Attempt Recovery\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-sm btn-outline-light ms-2\",\n                  onClick: () => {\n                    // Reset to default template\n                    setSelectedTemplate('modern');\n                    showToast('Switched to default template. Please try generating again.', 'info');\n                  },\n                  children: \"Use Default Template\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this), 'danger', 10000 // Longer duration for this important message\n            );\n\n            // Report error for monitoring\n            reportError('Missing document structure in LaTeX template', {\n              template: selectedTemplate,\n              errorDetails: errorData.details,\n              command: errorData.command,\n              documentTags: errorData.documentTags\n            });\n\n            // Also try to generate a client-side PDF as fallback\n            try {\n              // Generate a client-side fallback PDF\n              showToast(\"Attempting to generate a fallback PDF version...\", \"info\");\n              generateClientSidePdf(formData).then(result => {\n                if (result && result.pdf) {\n                  // Store generated files information\n                  setGeneratedFiles({\n                    tex: filename,\n                    txt: filename,\n                    clientPdf: result.pdf // Store the client-generated PDF URL\n                  });\n                  showToast(\"Fallback PDF generated successfully!\", \"success\");\n                }\n              });\n            } catch (clientPdfError) {\n              console.error('Failed to generate fallback PDF:', clientPdfError);\n            }\n          }\n          // Special case for missing LaTeX packages\n          else if (errorData.error === 'LaTeX compilation failed' && errorData.details.includes(\"File `\") && errorData.details.includes(\"' not found\")) {\n            // Extract package name from error message\n            const packageMatch = errorData.details.match(/File `([^']+)' not found/);\n            const packageName = packageMatch ? packageMatch[1].replace('.sty', '') : 'unknown package';\n            console.log(`Missing LaTeX package: ${packageName}`);\n\n            // Show more specific error message for missing packages\n            const packageMessage = `Missing LaTeX package: ${packageName}\n\nThe LaTeX compilation failed because a required package is missing. To fix this:\n\n1. Open MiKTeX Console (search for it in your Start menu)\n2. Go to \"Packages\" tab\n3. Search for \"${packageName}\"\n4. Right-click and select \"Install\"\n5. Wait for installation to complete\n6. Try generating your resume again\n\nAlternatively, enable \"Install missing packages on-the-fly\" in MiKTeX Console Settings.`;\n\n            // Use toast notification instead of alert\n            showToast(`Missing LaTeX package: ${packageName}. Opening installation guide...`, 'warning');\n\n            // Also show the LaTeX installation guide for more help\n            setIsLaTeXMissing(true);\n            setShowLaTeXGuide(true);\n          } else {\n            errorMessage = `Resume generation failed: ${errorData.error || 'Unknown error'}`;\n            // Use toast instead of alert for better user experience\n            showToast(errorMessage, 'danger');\n\n            // Log error details for debugging without exposing to user interface\n            console.error('Resume generation error details:', errorData.details || 'No additional details');\n          }\n        } catch (jsonError) {\n          // Not valid JSON, check for LaTeX patterns\n          if (textData.includes('LaTeX') || textData.includes('pdflatex')) {\n            console.error('LaTeX error detected:', textData);\n            errorMessage = `LaTeX Error: ${textData.substring(0, 500)}`;\n            if (textData.length > 500) {\n              errorMessage += '... (error message truncated)';\n            }\n          } else if (textData && textData.trim().length > 0) {\n            // Use text directly\n            errorMessage = `Resume generation failed: ${textData.substring(0, 500)}`;\n            if (textData.length > 500) {\n              errorMessage += '... (error message truncated)';\n            }\n          }\n          showToast(errorMessage, 'danger');\n        }\n      } catch (e) {\n        console.error('Failed to process error response:', e);\n        showToast('An unexpected error occurred while processing the server response', 'danger');\n      }\n      setIsGenerating(false);\n    }\n  };\n  const handleDownload = (type, filename) => {\n    window.open(`http://localhost:5000/download/${type}/${filename}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `app-container ${theme}-theme container-fluid p-0`,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header text-center py-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"display-4\",\n        children: \"ResuMate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"lead\",\n        children: \"Create an ATS-friendly professional resume\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"theme-toggle btn\",\n        onClick: handleThemeToggle,\n        children: theme === 'light' ? '🌙 Dark Mode' : '☀️ Light Mode'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"template-selection container\",\n      children: /*#__PURE__*/_jsxDEV(TemplateSelector, {\n        selectedTemplate: selectedTemplate,\n        onTemplateChange: handleTemplateChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-container col-lg-6 mb-4\",\n          children: /*#__PURE__*/_jsxDEV(ResumeForm, {\n            onSubmit: handleFormSubmit,\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"preview-container col-lg-6\",\n          children: formData && /*#__PURE__*/_jsxDEV(ResumePreview, {\n            formData: formData,\n            templateType: selectedTemplate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }, this), isGenerating && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"generating-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"generating-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner-border text-primary\",\n          role: \"status\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"visually-hidden\",\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-3\",\n          children: \"Generating your ATS-friendly resume...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 9\n    }, this), generatedFiles && !isGenerating && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"download-options container text-center my-4 p-4 rounded\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"mb-4\",\n        children: \"Download Your Resume\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"download-buttons d-flex justify-content-center flex-wrap gap-3\",\n        children: [isLaTeXMissing && generatedFiles.clientPdf ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => window.open(generatedFiles.clientPdf, '_blank'),\n          className: \"btn btn-success btn-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bi bi-file-pdf\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 17\n          }, this), \" Download Client PDF\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 15\n        }, this) : generatedFiles.pdf && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDownload('pdf', generatedFiles.pdf),\n          className: \"btn btn-success btn-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bi bi-file-pdf\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 19\n          }, this), \" Download PDF\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDownload('tex', generatedFiles.tex),\n          className: \"btn btn-primary btn-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bi bi-file-text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 15\n          }, this), \" Download LaTeX Source\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDownload('txt', generatedFiles.txt),\n          className: \"btn btn-secondary btn-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bi bi-file-text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 15\n          }, this), \" Download Plain Text\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 13\n        }, this), isLaTeXMissing && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowLaTeXGuide(true),\n          className: \"btn btn-info btn-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bi bi-info-circle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 17\n          }, this), \" LaTeX Installation Guide\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 11\n      }, this), isLaTeXMissing && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fallback-notice mt-3 alert alert-info\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Note:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 18\n          }, this), \" The PDF was generated using a client-side fallback because LaTeX is not installed on your system. For higher quality PDFs, please install LaTeX using the installation guide.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"app-footer mt-auto py-3 text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-0\",\n        children: \"\\xA9 2023 ResuMate. All rights reserved.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 7\n    }, this), showLaTeXGuide && /*#__PURE__*/_jsxDEV(LaTeXInstallGuide, {\n      onDismiss: handleCloseLaTeXGuide,\n      onUseClientSidePDF: handleUseClientSidePdf\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 9\n    }, this), toast.show && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `toast-container position-fixed bottom-0 end-0 p-3`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `toast show bg-${toast.type} text-white`,\n        role: \"alert\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"toast-body\",\n          children: toast.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 346,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"g/W0ZkBmdg2ma4GE6O+8ScZMR1E=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","ResumeForm","ResumePreview","TemplateSelector","latexTemplates","Mustache","generatePlainText","LaTeXInstallGuide","generateClientSidePdf","reportError","reportUsage","validateLatexTemplate","attemptLatexFix","safeRenderLatex","jsxDEV","_jsxDEV","App","_s","isGenerating","setIsGenerating","useState","generatedFiles","setGeneratedFiles","selectedTemplate","setSelectedTemplate","theme","setTheme","formData","setFormData","showLaTeXGuide","setShowLaTeXGuide","isLaTeXMissing","setIsLaTeXMissing","toast","setToast","show","message","type","handleFormChange","data","handleTemplateChange","template","handleThemeToggle","handleCloseLaTeXGuide","showToast","duration","setTimeout","handleUseClientSidePdf","pdf","prevFiles","clientPdf","window","open","error","console","handleFormSubmit","latex","plainText","validation","warnings","length","warn","isValid","errors","beginDocPos","beginDocumentPosition","endDocPos","endDocumentPosition","fixResult","fixed","log","fixes","filename","name","replace","res","fetch","method","headers","body","JSON","stringify","ok","tex","json","txt","errorMessage","status","textData","text","errorData","parse","result","clientPdfError","details","includes","children","className","onClick","then","catch","err","fileName","_jsxFileName","lineNumber","columnNumber","errorDetails","command","documentTags","packageMatch","match","packageName","packageMessage","jsonError","substring","trim","e","handleDownload","onTemplateChange","onSubmit","onChange","templateType","role","onDismiss","onUseClientSidePDF","_c","$RefreshReg$"],"sources":["C:/Users/dell/OneDrive/Desktop/resumate/client/src/App.js"],"sourcesContent":["import React from 'react';\r\nimport ResumeForm from './ResumeForm';\r\nimport ResumePreview from './ResumePreview';\r\nimport TemplateSelector from './TemplateSelector';\r\nimport latexTemplates from './latexTemplates';\r\nimport Mustache from 'mustache';\r\nimport generatePlainText from './plainTextGenerator';\r\nimport LaTeXInstallGuide from './LaTeXInstallGuide';\r\nimport generateClientSidePdf from './clientPdfGenerator';\r\nimport { reportError, reportUsage } from './errorReporting';\r\nimport { validateLatexTemplate, attemptLatexFix } from './latexValidator';\r\nimport safeRenderLatex from './safeLatexRenderer';\r\nimport './App.css';\r\nimport './LaTeXInstallGuide.css';\r\n\r\nfunction App() {\r\n  const [isGenerating, setIsGenerating] = React.useState(false);\r\n  const [generatedFiles, setGeneratedFiles] = React.useState(null);\r\n  const [selectedTemplate, setSelectedTemplate] = React.useState('modern');\r\n  const [theme, setTheme] = React.useState('light');\r\n  const [formData, setFormData] = React.useState(null);\r\n  const [showLaTeXGuide, setShowLaTeXGuide] = React.useState(false);\r\n  const [isLaTeXMissing, setIsLaTeXMissing] = React.useState(false);\r\n  const [toast, setToast] = React.useState({ show: false, message: '', type: 'success' });\r\n  \r\n  // Handle form data changes for live preview\r\n  const handleFormChange = (data) => {\r\n    setFormData(data);\r\n  };\r\n  \r\n  // Handle template selection change\r\n  const handleTemplateChange = (template) => {\r\n    setSelectedTemplate(template);\r\n  };\r\n  \r\n  // Toggle between light and dark theme\r\n  const handleThemeToggle = () => {\r\n    setTheme(theme === 'light' ? 'dark' : 'light');\r\n  };\r\n  \r\n  // Handle closing the LaTeX installation guide\r\n  const handleCloseLaTeXGuide = () => {\r\n    setShowLaTeXGuide(false);\r\n  };\r\n  \r\n  // Show toast notification\r\n  const showToast = (message, type = 'success', duration = 5000) => {\r\n    setToast({ show: true, message, type });\r\n    setTimeout(() => {\r\n      setToast({ show: false, message: '', type: 'success' });\r\n    }, duration);\r\n  };\r\n\r\n  // Handle using the client-side PDF generator\r\n  const handleUseClientSidePdf = async () => {\r\n    try {\r\n      if (formData) {\r\n        // Close the LaTeX guide modal\r\n        setShowLaTeXGuide(false);\r\n        \r\n        // Show loading indicator\r\n        setIsGenerating(true);\r\n        \r\n        // Generate client-side PDF\r\n        const { pdf } = await generateClientSidePdf(formData);\r\n        \r\n        // Update generated files with client PDF\r\n        setGeneratedFiles(prevFiles => ({\r\n          ...prevFiles,\r\n          clientPdf: pdf\r\n        }));\r\n        \r\n        // Hide loading indicator\r\n        setIsGenerating(false);\r\n        \r\n        // Show success toast\r\n        showToast('Client-side PDF generated successfully!');\r\n        \r\n        // Open the PDF in a new tab\r\n        window.open(pdf, '_blank');\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to generate client-side PDF:', error);\r\n      showToast('Failed to generate client-side PDF. Please try installing LaTeX instead.', 'danger');\r\n      setIsGenerating(false);\r\n    }\r\n  };\r\n  \r\n  // Handler for form submission\r\n  const handleFormSubmit = async (formData) => {\r\n    setIsGenerating(true);\r\n    setFormData(formData); // Update form data for preview\r\n    \r\n    // Get the selected template\r\n    const template = latexTemplates[selectedTemplate];\r\n    \r\n    // Use safe LaTeX rendering to prevent content before \\begin{document}\r\n    const latex = safeRenderLatex(template, formData);\r\n    \r\n    // Generate plain text version\r\n    const plainText = generatePlainText(formData);\r\n    \r\n    // Validate the LaTeX template before submission\r\n    const validation = validateLatexTemplate(latex);\r\n    \r\n    // Log warnings but don't block submission\r\n    if (validation.warnings.length > 0) {\r\n      console.warn('LaTeX template warnings:', validation.warnings);\r\n    }\r\n    \r\n    // If there are errors, try to fix them automatically\r\n    if (!validation.isValid) {\r\n      console.error('LaTeX template validation failed:', validation.errors);\r\n      reportError('LaTeX template validation failed', {\r\n        template: selectedTemplate,\r\n        errors: validation.errors,\r\n        beginDocPos: validation.beginDocumentPosition,\r\n        endDocPos: validation.endDocumentPosition\r\n      });\r\n      \r\n      // Attempt to fix template issues\r\n      const fixResult = attemptLatexFix(latex);\r\n      \r\n      if (fixResult.fixed) {\r\n        // Use the fixed template\r\n        console.log('Template issues automatically fixed:', fixResult.fixes);\r\n        showToast('Fixed some issues with the resume template', 'info');\r\n      } else {\r\n        // If we couldn't fix it, warn the user\r\n        showToast('There may be issues with the template structure. Trying anyway...', 'warning');\r\n      }\r\n    }\r\n    \r\n    const filename = formData.name ? formData.name.replace(/\\s+/g, '_') : 'resume';\r\n    \r\n    // Send LaTeX to backend for PDF generation\r\n    const res = await fetch('http://localhost:5000/generate', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ latex, filename, plainText, template: selectedTemplate })\r\n    });\r\n    \r\n    if (res.ok) {\r\n      const { pdf, tex } = await res.json();\r\n      setGeneratedFiles({ pdf: filename, tex: filename, txt: filename });\r\n      setIsGenerating(false);\r\n    } else {\r\n      // Don't immediately try to parse as JSON, get the text first\r\n      let errorMessage = `Resume generation failed. Server returned status ${res.status}`;\r\n      \r\n      try {\r\n        // Get the response as text\r\n        const textData = await res.text();\r\n        console.log('Error response text:', textData);\r\n        \r\n        try {\r\n          // Try to parse as JSON first\r\n          const errorData = JSON.parse(textData);\r\n          console.error('JSON error details:', errorData);\r\n          \r\n          // Special case for LaTeX not installed error\r\n          if (errorData.error === 'LaTeX not installed') {\r\n            console.log('LaTeX not installed, showing guide and generating client-side PDF');\r\n            // Set state to show our installation guide\r\n            setIsLaTeXMissing(true);\r\n            setShowLaTeXGuide(true);\r\n            \r\n            // Generate a client-side fallback PDF\r\n            try {\r\n              const result = await generateClientSidePdf(formData);\r\n              if (result && result.pdf) {\r\n                // Store generated files information\r\n                setGeneratedFiles({ \r\n                  tex: filename, \r\n                  txt: filename,\r\n                  clientPdf: result.pdf  // Store the client-generated PDF URL\r\n                });\r\n              }\r\n            } catch (clientPdfError) {\r\n              console.error('Failed to generate PDF on client side:', clientPdfError);\r\n            }\r\n          } \r\n          // Special case for \"Missing \\begin{document}\" error\r\n          else if (errorData.error === 'LaTeX compilation failed' && \r\n                  errorData.details.includes(\"Missing \\\\begin{document}\")) {\r\n            console.log('LaTeX structure error: Missing \\\\begin{document}');\r\n            \r\n            // Show more user-friendly error message for document structure issues\r\n            const errorMessage = `LaTeX Document Structure Error: The resume couldn't be compiled because of a template formatting issue.\r\n\r\nThe system is trying to compile a document that doesn't have a proper structure. This is likely a bug in how the template is being generated.`;\r\n            \r\n            // Show toast with error message and recovery option\r\n            showToast(\r\n              <div>\r\n                {errorMessage}\r\n                <div className=\"mt-2\">\r\n                  <button \r\n                    className=\"btn btn-sm btn-outline-light\" \r\n                    onClick={() => {\r\n                      // Try to fix template and resubmit\r\n                      const fixResult = attemptLatexFix(latex);\r\n                      if (fixResult.fixed) {\r\n                        showToast('Attempting to recover with fixed template...', 'info');\r\n                        \r\n                        // Resubmit with fixed template\r\n                        fetch('http://localhost:5000/generate', {\r\n                          method: 'POST',\r\n                          headers: { 'Content-Type': 'application/json' },\r\n                          body: JSON.stringify({ \r\n                            latex: fixResult.latex, \r\n                            filename, \r\n                            plainText, \r\n                            template: selectedTemplate \r\n                          })\r\n                        }).then(res => {\r\n                          if (res.ok) {\r\n                            return res.json().then(data => {\r\n                              setGeneratedFiles({ pdf: filename, tex: filename, txt: filename });\r\n                              showToast('Recovery successful! Resume generated.', 'success');\r\n                            });\r\n                          } else {\r\n                            showToast('Recovery failed. Please try a different template.', 'danger');\r\n                          }\r\n                        }).catch(err => {\r\n                          showToast('Recovery failed. Please try a different template.', 'danger');\r\n                        });\r\n                      } else {\r\n                        showToast('Could not automatically fix the template. Please try a different template.', 'danger');\r\n                      }\r\n                    }}\r\n                  >\r\n                    Attempt Recovery\r\n                  </button>\r\n                  <button\r\n                    className=\"btn btn-sm btn-outline-light ms-2\"\r\n                    onClick={() => {\r\n                      // Reset to default template\r\n                      setSelectedTemplate('modern');\r\n                      showToast('Switched to default template. Please try generating again.', 'info');\r\n                    }}\r\n                  >\r\n                    Use Default Template\r\n                  </button>\r\n                </div>\r\n              </div>,\r\n              'danger',\r\n              10000 // Longer duration for this important message\r\n            );\r\n            \r\n            // Report error for monitoring\r\n            reportError('Missing document structure in LaTeX template', {\r\n              template: selectedTemplate,\r\n              errorDetails: errorData.details,\r\n              command: errorData.command,\r\n              documentTags: errorData.documentTags\r\n            });\r\n            \r\n            // Also try to generate a client-side PDF as fallback\r\n            try {\r\n              // Generate a client-side fallback PDF\r\n              showToast(\"Attempting to generate a fallback PDF version...\", \"info\");\r\n              generateClientSidePdf(formData).then(result => {\r\n                if (result && result.pdf) {\r\n                  // Store generated files information\r\n                  setGeneratedFiles({ \r\n                    tex: filename, \r\n                    txt: filename,\r\n                    clientPdf: result.pdf  // Store the client-generated PDF URL\r\n                  });\r\n                  showToast(\"Fallback PDF generated successfully!\", \"success\");\r\n                }\r\n              });\r\n            } catch (clientPdfError) {\r\n              console.error('Failed to generate fallback PDF:', clientPdfError);\r\n            }\r\n          }\r\n          // Special case for missing LaTeX packages\r\n          else if (errorData.error === 'LaTeX compilation failed' && \r\n                  (errorData.details.includes(\"File `\") && errorData.details.includes(\"' not found\"))) {\r\n            // Extract package name from error message\r\n            const packageMatch = errorData.details.match(/File `([^']+)' not found/);\r\n            const packageName = packageMatch ? packageMatch[1].replace('.sty', '') : 'unknown package';\r\n            \r\n            console.log(`Missing LaTeX package: ${packageName}`);\r\n            \r\n            // Show more specific error message for missing packages\r\n            const packageMessage = `Missing LaTeX package: ${packageName}\r\n\r\nThe LaTeX compilation failed because a required package is missing. To fix this:\r\n\r\n1. Open MiKTeX Console (search for it in your Start menu)\r\n2. Go to \"Packages\" tab\r\n3. Search for \"${packageName}\"\r\n4. Right-click and select \"Install\"\r\n5. Wait for installation to complete\r\n6. Try generating your resume again\r\n\r\nAlternatively, enable \"Install missing packages on-the-fly\" in MiKTeX Console Settings.`;\r\n            \r\n            // Use toast notification instead of alert\r\n            showToast(`Missing LaTeX package: ${packageName}. Opening installation guide...`, 'warning');\r\n            \r\n            // Also show the LaTeX installation guide for more help\r\n            setIsLaTeXMissing(true);\r\n            setShowLaTeXGuide(true);\r\n          } else {\r\n            errorMessage = `Resume generation failed: ${errorData.error || 'Unknown error'}`;\r\n            // Use toast instead of alert for better user experience\r\n            showToast(errorMessage, 'danger');\r\n            \r\n            // Log error details for debugging without exposing to user interface\r\n            console.error('Resume generation error details:', errorData.details || 'No additional details');\r\n          }\r\n        } catch (jsonError) {\r\n          // Not valid JSON, check for LaTeX patterns\r\n          if (textData.includes('LaTeX') || textData.includes('pdflatex')) {\r\n            console.error('LaTeX error detected:', textData);\r\n            errorMessage = `LaTeX Error: ${textData.substring(0, 500)}`;\r\n            if (textData.length > 500) {\r\n              errorMessage += '... (error message truncated)';\r\n            }\r\n          } else if (textData && textData.trim().length > 0) {\r\n            // Use text directly\r\n            errorMessage = `Resume generation failed: ${textData.substring(0, 500)}`;\r\n            if (textData.length > 500) {\r\n              errorMessage += '... (error message truncated)';\r\n            }\r\n          }\r\n          showToast(errorMessage, 'danger');\r\n        }\r\n      } catch (e) {\r\n        console.error('Failed to process error response:', e);\r\n        showToast('An unexpected error occurred while processing the server response', 'danger');\r\n      }\r\n      \r\n      setIsGenerating(false);\r\n    }\r\n  };\r\n  \r\n  const handleDownload = (type, filename) => {\r\n    window.open(`http://localhost:5000/download/${type}/${filename}`);\r\n  };\r\n\r\n  return (\r\n    <div className={`app-container ${theme}-theme container-fluid p-0`}>\r\n      <header className=\"app-header text-center py-4\">\r\n        <h1 className=\"display-4\">ResuMate</h1>\r\n        <p className=\"lead\">Create an ATS-friendly professional resume</p>\r\n        <button className=\"theme-toggle btn\" onClick={handleThemeToggle}>\r\n          {theme === 'light' ? '🌙 Dark Mode' : '☀️ Light Mode'}\r\n        </button>\r\n      </header>\r\n      \r\n      <div className=\"template-selection container\">\r\n        <TemplateSelector \r\n          selectedTemplate={selectedTemplate} \r\n          onTemplateChange={handleTemplateChange}\r\n        />\r\n      </div>\r\n      \r\n      <div className=\"main-content container\">\r\n        <div className=\"row\">\r\n          <div className=\"form-container col-lg-6 mb-4\">\r\n            <ResumeForm \r\n              onSubmit={handleFormSubmit} \r\n              onChange={handleFormChange}\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"preview-container col-lg-6\">\r\n            {formData && (\r\n              <ResumePreview \r\n                formData={formData} \r\n                templateType={selectedTemplate}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      {isGenerating && (\r\n        <div className=\"generating-overlay\">\r\n          <div className=\"generating-message\">\r\n            <div className=\"spinner-border text-primary\" role=\"status\">\r\n              <span className=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n            <p className=\"mt-3\">Generating your ATS-friendly resume...</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {generatedFiles && !isGenerating && (\r\n        <div className=\"download-options container text-center my-4 p-4 rounded\">\r\n          <h2 className=\"mb-4\">Download Your Resume</h2>\r\n          <div className=\"download-buttons d-flex justify-content-center flex-wrap gap-3\">\r\n            {/* If LaTeX is missing and we have a client-generated PDF */}\r\n            {isLaTeXMissing && generatedFiles.clientPdf ? (\r\n              <button \r\n                onClick={() => window.open(generatedFiles.clientPdf, '_blank')} \r\n                className=\"btn btn-success btn-lg\"\r\n              >\r\n                <i className=\"bi bi-file-pdf\"></i> Download Client PDF\r\n              </button>\r\n            ) : (\r\n              generatedFiles.pdf && (\r\n                <button \r\n                  onClick={() => handleDownload('pdf', generatedFiles.pdf)} \r\n                  className=\"btn btn-success btn-lg\"\r\n                >\r\n                  <i className=\"bi bi-file-pdf\"></i> Download PDF\r\n                </button>\r\n              )\r\n            )}\r\n            \r\n            <button \r\n              onClick={() => handleDownload('tex', generatedFiles.tex)} \r\n              className=\"btn btn-primary btn-lg\"\r\n            >\r\n              <i className=\"bi bi-file-text\"></i> Download LaTeX Source\r\n            </button>\r\n            <button \r\n              onClick={() => handleDownload('txt', generatedFiles.txt)} \r\n              className=\"btn btn-secondary btn-lg\"\r\n            >\r\n              <i className=\"bi bi-file-text\"></i> Download Plain Text\r\n            </button>\r\n            \r\n            {/* Show LaTeX installation guide button if LaTeX is missing */}\r\n            {isLaTeXMissing && (\r\n              <button \r\n                onClick={() => setShowLaTeXGuide(true)} \r\n                className=\"btn btn-info btn-lg\"\r\n              >\r\n                <i className=\"bi bi-info-circle\"></i> LaTeX Installation Guide\r\n              </button>\r\n            )}\r\n          </div>\r\n          \r\n          {isLaTeXMissing && (\r\n            <div className=\"fallback-notice mt-3 alert alert-info\">\r\n              <p><strong>Note:</strong> The PDF was generated using a client-side fallback because LaTeX is not installed on your system. \r\n              For higher quality PDFs, please install LaTeX using the installation guide.</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n      \r\n      <footer className=\"app-footer mt-auto py-3 text-center\">\r\n        <p className=\"mb-0\">&copy; 2023 ResuMate. All rights reserved.</p>\r\n      </footer>\r\n      \r\n      {/* LaTeX Installation Guide Modal */}\r\n      {showLaTeXGuide && (\r\n        <LaTeXInstallGuide \r\n          onDismiss={handleCloseLaTeXGuide}\r\n          onUseClientSidePDF={handleUseClientSidePdf}\r\n        />\r\n      )}\r\n      \r\n      {/* Toast notifications */}\r\n      {toast.show && (\r\n        <div className={`toast-container position-fixed bottom-0 end-0 p-3`}>\r\n          <div className={`toast show bg-${toast.type} text-white`} role=\"alert\">\r\n            <div className=\"toast-body\">\r\n              {toast.message}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}