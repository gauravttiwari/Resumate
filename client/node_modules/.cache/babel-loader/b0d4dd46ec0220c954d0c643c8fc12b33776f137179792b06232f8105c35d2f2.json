{"ast":null,"code":"import Mustache from 'mustache';\n\n/**\r\n * Enhanced Mustache rendering function that ensures LaTeX document structure integrity\r\n * by preventing user data from being inserted before \\begin{document}\r\n * \r\n * @param {string} template - The LaTeX template to render\r\n * @param {object} data - The data to inject into the template\r\n * @returns {string} - The rendered LaTeX document with proper structure\r\n */\nexport const safeRenderLatex = (template, data) => {\n  if (!template || typeof template !== 'string') {\n    return '';\n  }\n\n  // First, find the position of \\begin{document} in the template\n  const beginDocPos = template.indexOf('\\\\begin{document}');\n  if (beginDocPos === -1) {\n    console.error('Template is missing \\\\begin{document} tag');\n    return template; // Return original template if no begin document tag\n  }\n\n  // Split the template into preamble and body\n  const preamble = template.substring(0, beginDocPos);\n  const body = template.substring(beginDocPos);\n\n  // Process preamble without data substitution to prevent user data from appearing there\n  // This keeps the preamble clean of any user-provided content\n\n  // Process body with Mustache to replace variables with user data\n  const renderedBody = Mustache.render(body, data);\n\n  // Combine the untouched preamble with the rendered body\n  return preamble + renderedBody;\n};\nexport default safeRenderLatex;","map":{"version":3,"names":["Mustache","safeRenderLatex","template","data","beginDocPos","indexOf","console","error","preamble","substring","body","renderedBody","render"],"sources":["c:/Users/dell/OneDrive/Desktop/resumate/client/src/safeLatexRenderer.js"],"sourcesContent":["import Mustache from 'mustache';\r\n\r\n/**\r\n * Enhanced Mustache rendering function that ensures LaTeX document structure integrity\r\n * by preventing user data from being inserted before \\begin{document}\r\n * \r\n * @param {string} template - The LaTeX template to render\r\n * @param {object} data - The data to inject into the template\r\n * @returns {string} - The rendered LaTeX document with proper structure\r\n */\r\nexport const safeRenderLatex = (template, data) => {\r\n  if (!template || typeof template !== 'string') {\r\n    return '';\r\n  }\r\n\r\n  // First, find the position of \\begin{document} in the template\r\n  const beginDocPos = template.indexOf('\\\\begin{document}');\r\n  \r\n  if (beginDocPos === -1) {\r\n    console.error('Template is missing \\\\begin{document} tag');\r\n    return template; // Return original template if no begin document tag\r\n  }\r\n  \r\n  // Split the template into preamble and body\r\n  const preamble = template.substring(0, beginDocPos);\r\n  const body = template.substring(beginDocPos);\r\n  \r\n  // Process preamble without data substitution to prevent user data from appearing there\r\n  // This keeps the preamble clean of any user-provided content\r\n  \r\n  // Process body with Mustache to replace variables with user data\r\n  const renderedBody = Mustache.render(body, data);\r\n  \r\n  // Combine the untouched preamble with the rendered body\r\n  return preamble + renderedBody;\r\n};\r\n\r\nexport default safeRenderLatex;\r\n"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,UAAU;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,eAAe,GAAGA,CAACC,QAAQ,EAAEC,IAAI,KAAK;EACjD,IAAI,CAACD,QAAQ,IAAI,OAAOA,QAAQ,KAAK,QAAQ,EAAE;IAC7C,OAAO,EAAE;EACX;;EAEA;EACA,MAAME,WAAW,GAAGF,QAAQ,CAACG,OAAO,CAAC,mBAAmB,CAAC;EAEzD,IAAID,WAAW,KAAK,CAAC,CAAC,EAAE;IACtBE,OAAO,CAACC,KAAK,CAAC,2CAA2C,CAAC;IAC1D,OAAOL,QAAQ,CAAC,CAAC;EACnB;;EAEA;EACA,MAAMM,QAAQ,GAAGN,QAAQ,CAACO,SAAS,CAAC,CAAC,EAAEL,WAAW,CAAC;EACnD,MAAMM,IAAI,GAAGR,QAAQ,CAACO,SAAS,CAACL,WAAW,CAAC;;EAE5C;EACA;;EAEA;EACA,MAAMO,YAAY,GAAGX,QAAQ,CAACY,MAAM,CAACF,IAAI,EAAEP,IAAI,CAAC;;EAEhD;EACA,OAAOK,QAAQ,GAAGG,YAAY;AAChC,CAAC;AAED,eAAeV,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}