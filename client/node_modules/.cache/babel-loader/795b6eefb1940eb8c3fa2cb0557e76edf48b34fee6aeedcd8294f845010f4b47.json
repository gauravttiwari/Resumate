{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\dell\\\\OneDrive\\\\Desktop\\\\resumate\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport ResumeForm from './ResumeForm';\nimport ResumePreview from './ResumePreview';\nimport TemplateSelector from './TemplateSelector';\nimport latexTemplates from './latexTemplates';\nimport Mustache from 'mustache';\nimport generatePlainText from './plainTextGenerator';\nimport LaTeXInstallGuide from './LaTeXInstallGuide';\nimport generateClientSidePdf from './clientPdfGenerator';\nimport './App.css';\nimport './LaTeXInstallGuide.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isGenerating, setIsGenerating] = React.useState(false);\n  const [generatedFiles, setGeneratedFiles] = React.useState(null);\n  const [selectedTemplate, setSelectedTemplate] = React.useState('modern');\n  const [theme, setTheme] = React.useState('light');\n  const [formData, setFormData] = React.useState(null);\n  const [showLaTeXGuide, setShowLaTeXGuide] = React.useState(false);\n  const [isLaTeXMissing, setIsLaTeXMissing] = React.useState(false);\n  const [toast, setToast] = React.useState({\n    show: false,\n    message: '',\n    type: 'success'\n  });\n\n  // Handle form data changes for live preview\n  const handleFormChange = data => {\n    setFormData(data);\n  };\n\n  // Handle template selection change\n  const handleTemplateChange = template => {\n    setSelectedTemplate(template);\n  };\n\n  // Toggle between light and dark theme\n  const handleThemeToggle = () => {\n    setTheme(theme === 'light' ? 'dark' : 'light');\n  };\n\n  // Handle closing the LaTeX installation guide\n  const handleCloseLaTeXGuide = () => {\n    setShowLaTeXGuide(false);\n  };\n\n  // Show toast notification\n  const showToast = (message, type = 'success') => {\n    setToast({\n      show: true,\n      message,\n      type\n    });\n    setTimeout(() => {\n      setToast({\n        show: false,\n        message: '',\n        type: 'success'\n      });\n    }, 5000);\n  };\n\n  // Handle using the client-side PDF generator\n  const handleUseClientSidePdf = async () => {\n    try {\n      if (formData) {\n        // Close the LaTeX guide modal\n        setShowLaTeXGuide(false);\n\n        // Show loading indicator\n        setIsGenerating(true);\n\n        // Generate client-side PDF\n        const {\n          pdf\n        } = await generateClientSidePdf(formData);\n\n        // Update generated files with client PDF\n        setGeneratedFiles(prevFiles => ({\n          ...prevFiles,\n          clientPdf: pdf\n        }));\n\n        // Hide loading indicator\n        setIsGenerating(false);\n\n        // Show success toast\n        showToast('Client-side PDF generated successfully!');\n\n        // Open the PDF in a new tab\n        window.open(pdf, '_blank');\n      }\n    } catch (error) {\n      console.error('Failed to generate client-side PDF:', error);\n      showToast('Failed to generate client-side PDF. Please try installing LaTeX instead.', 'danger');\n      setIsGenerating(false);\n    }\n  };\n\n  // Handler for form submission\n  const handleFormSubmit = async formData => {\n    setIsGenerating(true);\n    setFormData(formData); // Update form data for preview\n\n    // Get the selected template\n    const template = latexTemplates[selectedTemplate];\n\n    // Inject data into LaTeX template\n    const latex = Mustache.render(template, formData);\n\n    // Generate plain text version\n    const plainText = generatePlainText(formData);\n    const filename = formData.name ? formData.name.replace(/\\s+/g, '_') : 'resume';\n\n    // Send LaTeX to backend for PDF generation\n    const res = await fetch('http://localhost:5000/generate', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        latex,\n        filename,\n        plainText,\n        template: selectedTemplate\n      })\n    });\n    if (res.ok) {\n      const {\n        pdf,\n        tex\n      } = await res.json();\n      setGeneratedFiles({\n        pdf: filename,\n        tex: filename,\n        txt: filename\n      });\n      setIsGenerating(false);\n    } else {\n      // Don't immediately try to parse as JSON, get the text first\n      let errorMessage = `Resume generation failed. Server returned status ${res.status}`;\n      try {\n        // Get the response as text\n        const textData = await res.text();\n        console.log('Error response text:', textData);\n        try {\n          // Try to parse as JSON first\n          const errorData = JSON.parse(textData);\n          console.error('JSON error details:', errorData);\n\n          // Special case for LaTeX not installed error\n          if (errorData.error === 'LaTeX not installed') {\n            console.log('LaTeX not installed, showing guide and generating client-side PDF');\n            // Set state to show our installation guide\n            setIsLaTeXMissing(true);\n            setShowLaTeXGuide(true);\n\n            // Generate a client-side fallback PDF\n            try {\n              const result = await generateClientSidePdf(formData);\n              if (result && result.pdf) {\n                // Store generated files information\n                setGeneratedFiles({\n                  tex: filename,\n                  txt: filename,\n                  clientPdf: result.pdf // Store the client-generated PDF URL\n                });\n              }\n            } catch (clientPdfError) {\n              console.error('Failed to generate PDF on client side:', clientPdfError);\n            }\n          } else {\n            errorMessage = `Resume generation failed: ${errorData.error || 'Unknown error'}\\n\\nDetails: ${errorData.details || 'No additional details'}`;\n            alert(errorMessage);\n          }\n        } catch (jsonError) {\n          // Not valid JSON, check for LaTeX patterns\n          if (textData.includes('LaTeX') || textData.includes('pdflatex')) {\n            console.error('LaTeX error detected:', textData);\n            errorMessage = `LaTeX Error: ${textData.substring(0, 500)}`;\n            if (textData.length > 500) {\n              errorMessage += '... (error message truncated)';\n            }\n          } else if (textData && textData.trim().length > 0) {\n            // Use text directly\n            errorMessage = `Resume generation failed: ${textData.substring(0, 500)}`;\n            if (textData.length > 500) {\n              errorMessage += '... (error message truncated)';\n            }\n          }\n          alert(errorMessage);\n        }\n      } catch (e) {\n        console.error('Failed to process error response:', e);\n        alert(errorMessage);\n      }\n      setIsGenerating(false);\n    }\n  };\n  const handleDownload = (type, filename) => {\n    window.open(`http://localhost:5000/download/${type}/${filename}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `app-container ${theme}-theme container-fluid p-0`,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header text-center py-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"display-4\",\n        children: \"ResuMate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"lead\",\n        children: \"Create an ATS-friendly professional resume\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"theme-toggle btn\",\n        onClick: handleThemeToggle,\n        children: theme === 'light' ? 'üåô Dark Mode' : '‚òÄÔ∏è Light Mode'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"template-selection container\",\n      children: /*#__PURE__*/_jsxDEV(TemplateSelector, {\n        selectedTemplate: selectedTemplate,\n        onTemplateChange: handleTemplateChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-container col-lg-6 mb-4\",\n          children: /*#__PURE__*/_jsxDEV(ResumeForm, {\n            onSubmit: handleFormSubmit,\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"preview-container col-lg-6\",\n          children: formData && /*#__PURE__*/_jsxDEV(ResumePreview, {\n            formData: formData,\n            templateType: selectedTemplate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), isGenerating && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"generating-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"generating-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner-border text-primary\",\n          role: \"status\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"visually-hidden\",\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-3\",\n          children: \"Generating your ATS-friendly resume...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }, this), generatedFiles && !isGenerating && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"download-options container text-center my-4 p-4 rounded\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"mb-4\",\n        children: \"Download Your Resume\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"download-buttons d-flex justify-content-center flex-wrap gap-3\",\n        children: [isLaTeXMissing && generatedFiles.clientPdf ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => window.open(generatedFiles.clientPdf, '_blank'),\n          className: \"btn btn-success btn-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bi bi-file-pdf\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 17\n          }, this), \" Download Client PDF\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 15\n        }, this) : generatedFiles.pdf && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDownload('pdf', generatedFiles.pdf),\n          className: \"btn btn-success btn-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bi bi-file-pdf\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 19\n          }, this), \" Download PDF\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDownload('tex', generatedFiles.tex),\n          className: \"btn btn-primary btn-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bi bi-file-text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this), \" Download LaTeX Source\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDownload('txt', generatedFiles.txt),\n          className: \"btn btn-secondary btn-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bi bi-file-text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 15\n          }, this), \" Download Plain Text\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this), isLaTeXMissing && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowLaTeXGuide(true),\n          className: \"btn btn-info btn-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bi bi-info-circle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 17\n          }, this), \" LaTeX Installation Guide\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }, this), isLaTeXMissing && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fallback-notice mt-3 alert alert-info\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Note:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 18\n          }, this), \" The PDF was generated using a client-side fallback because LaTeX is not installed on your system. For higher quality PDFs, please install LaTeX using the installation guide.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"app-footer mt-auto py-3 text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-0\",\n        children: \"\\xA9 2023 ResuMate. All rights reserved.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this), showLaTeXGuide && /*#__PURE__*/_jsxDEV(LaTeXInstallGuide, {\n      onDismiss: handleCloseLaTeXGuide,\n      onUseClientSidePDF: handleUseClientSidePdf\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"g/W0ZkBmdg2ma4GE6O+8ScZMR1E=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","ResumeForm","ResumePreview","TemplateSelector","latexTemplates","Mustache","generatePlainText","LaTeXInstallGuide","generateClientSidePdf","jsxDEV","_jsxDEV","App","_s","isGenerating","setIsGenerating","useState","generatedFiles","setGeneratedFiles","selectedTemplate","setSelectedTemplate","theme","setTheme","formData","setFormData","showLaTeXGuide","setShowLaTeXGuide","isLaTeXMissing","setIsLaTeXMissing","toast","setToast","show","message","type","handleFormChange","data","handleTemplateChange","template","handleThemeToggle","handleCloseLaTeXGuide","showToast","setTimeout","handleUseClientSidePdf","pdf","prevFiles","clientPdf","window","open","error","console","handleFormSubmit","latex","render","plainText","filename","name","replace","res","fetch","method","headers","body","JSON","stringify","ok","tex","json","txt","errorMessage","status","textData","text","log","errorData","parse","result","clientPdfError","details","alert","jsonError","includes","substring","length","trim","e","handleDownload","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onTemplateChange","onSubmit","onChange","templateType","role","onDismiss","onUseClientSidePDF","_c","$RefreshReg$"],"sources":["c:/Users/dell/OneDrive/Desktop/resumate/client/src/App.js"],"sourcesContent":["\r\nimport React from 'react';\r\nimport ResumeForm from './ResumeForm';\r\nimport ResumePreview from './ResumePreview';\r\nimport TemplateSelector from './TemplateSelector';\r\nimport latexTemplates from './latexTemplates';\r\nimport Mustache from 'mustache';\r\nimport generatePlainText from './plainTextGenerator';\r\nimport LaTeXInstallGuide from './LaTeXInstallGuide';\r\nimport generateClientSidePdf from './clientPdfGenerator';\r\nimport './App.css';\r\nimport './LaTeXInstallGuide.css';\r\n\r\nfunction App() {\r\n  const [isGenerating, setIsGenerating] = React.useState(false);\r\n  const [generatedFiles, setGeneratedFiles] = React.useState(null);\r\n  const [selectedTemplate, setSelectedTemplate] = React.useState('modern');\r\n  const [theme, setTheme] = React.useState('light');\r\n  const [formData, setFormData] = React.useState(null);\r\n  const [showLaTeXGuide, setShowLaTeXGuide] = React.useState(false);\r\n  const [isLaTeXMissing, setIsLaTeXMissing] = React.useState(false);\r\n  const [toast, setToast] = React.useState({ show: false, message: '', type: 'success' });\r\n  \r\n  // Handle form data changes for live preview\r\n  const handleFormChange = (data) => {\r\n    setFormData(data);\r\n  };\r\n  \r\n  // Handle template selection change\r\n  const handleTemplateChange = (template) => {\r\n    setSelectedTemplate(template);\r\n  };\r\n  \r\n  // Toggle between light and dark theme\r\n  const handleThemeToggle = () => {\r\n    setTheme(theme === 'light' ? 'dark' : 'light');\r\n  };\r\n  \r\n  // Handle closing the LaTeX installation guide\r\n  const handleCloseLaTeXGuide = () => {\r\n    setShowLaTeXGuide(false);\r\n  };\r\n  \r\n  // Show toast notification\r\n  const showToast = (message, type = 'success') => {\r\n    setToast({ show: true, message, type });\r\n    setTimeout(() => {\r\n      setToast({ show: false, message: '', type: 'success' });\r\n    }, 5000);\r\n  };\r\n\r\n  // Handle using the client-side PDF generator\r\n  const handleUseClientSidePdf = async () => {\r\n    try {\r\n      if (formData) {\r\n        // Close the LaTeX guide modal\r\n        setShowLaTeXGuide(false);\r\n        \r\n        // Show loading indicator\r\n        setIsGenerating(true);\r\n        \r\n        // Generate client-side PDF\r\n        const { pdf } = await generateClientSidePdf(formData);\r\n        \r\n        // Update generated files with client PDF\r\n        setGeneratedFiles(prevFiles => ({\r\n          ...prevFiles,\r\n          clientPdf: pdf\r\n        }));\r\n        \r\n        // Hide loading indicator\r\n        setIsGenerating(false);\r\n        \r\n        // Show success toast\r\n        showToast('Client-side PDF generated successfully!');\r\n        \r\n        // Open the PDF in a new tab\r\n        window.open(pdf, '_blank');\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to generate client-side PDF:', error);\r\n      showToast('Failed to generate client-side PDF. Please try installing LaTeX instead.', 'danger');\r\n      setIsGenerating(false);\r\n    }\r\n  };\r\n  \r\n  // Handler for form submission\r\n  const handleFormSubmit = async (formData) => {\r\n    setIsGenerating(true);\r\n    setFormData(formData); // Update form data for preview\r\n    \r\n    // Get the selected template\r\n    const template = latexTemplates[selectedTemplate];\r\n    \r\n    // Inject data into LaTeX template\r\n    const latex = Mustache.render(template, formData);\r\n    \r\n    // Generate plain text version\r\n    const plainText = generatePlainText(formData);\r\n    \r\n    const filename = formData.name ? formData.name.replace(/\\s+/g, '_') : 'resume';\r\n    \r\n    // Send LaTeX to backend for PDF generation\r\n    const res = await fetch('http://localhost:5000/generate', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ latex, filename, plainText, template: selectedTemplate })\r\n    });\r\n    \r\n    if (res.ok) {\r\n      const { pdf, tex } = await res.json();\r\n      setGeneratedFiles({ pdf: filename, tex: filename, txt: filename });\r\n      setIsGenerating(false);\r\n    } else {\r\n      // Don't immediately try to parse as JSON, get the text first\r\n      let errorMessage = `Resume generation failed. Server returned status ${res.status}`;\r\n      \r\n      try {\r\n        // Get the response as text\r\n        const textData = await res.text();\r\n        console.log('Error response text:', textData);\r\n        \r\n        try {\r\n          // Try to parse as JSON first\r\n          const errorData = JSON.parse(textData);\r\n          console.error('JSON error details:', errorData);\r\n          \r\n          // Special case for LaTeX not installed error\r\n          if (errorData.error === 'LaTeX not installed') {\r\n            console.log('LaTeX not installed, showing guide and generating client-side PDF');\r\n            // Set state to show our installation guide\r\n            setIsLaTeXMissing(true);\r\n            setShowLaTeXGuide(true);\r\n            \r\n            // Generate a client-side fallback PDF\r\n            try {\r\n              const result = await generateClientSidePdf(formData);\r\n              if (result && result.pdf) {\r\n                // Store generated files information\r\n                setGeneratedFiles({ \r\n                  tex: filename, \r\n                  txt: filename,\r\n                  clientPdf: result.pdf  // Store the client-generated PDF URL\r\n                });\r\n              }\r\n            } catch (clientPdfError) {\r\n              console.error('Failed to generate PDF on client side:', clientPdfError);\r\n            }\r\n          } else {\r\n            errorMessage = `Resume generation failed: ${errorData.error || 'Unknown error'}\\n\\nDetails: ${errorData.details || 'No additional details'}`;\r\n            alert(errorMessage);\r\n          }\r\n        } catch (jsonError) {\r\n          // Not valid JSON, check for LaTeX patterns\r\n          if (textData.includes('LaTeX') || textData.includes('pdflatex')) {\r\n            console.error('LaTeX error detected:', textData);\r\n            errorMessage = `LaTeX Error: ${textData.substring(0, 500)}`;\r\n            if (textData.length > 500) {\r\n              errorMessage += '... (error message truncated)';\r\n            }\r\n          } else if (textData && textData.trim().length > 0) {\r\n            // Use text directly\r\n            errorMessage = `Resume generation failed: ${textData.substring(0, 500)}`;\r\n            if (textData.length > 500) {\r\n              errorMessage += '... (error message truncated)';\r\n            }\r\n          }\r\n          alert(errorMessage);\r\n        }\r\n      } catch (e) {\r\n        console.error('Failed to process error response:', e);\r\n        alert(errorMessage);\r\n      }\r\n      \r\n      setIsGenerating(false);\r\n    }\r\n  };\r\n  \r\n  const handleDownload = (type, filename) => {\r\n    window.open(`http://localhost:5000/download/${type}/${filename}`);\r\n  };\r\n\r\n  return (\r\n    <div className={`app-container ${theme}-theme container-fluid p-0`}>\r\n      <header className=\"app-header text-center py-4\">\r\n        <h1 className=\"display-4\">ResuMate</h1>\r\n        <p className=\"lead\">Create an ATS-friendly professional resume</p>\r\n        <button className=\"theme-toggle btn\" onClick={handleThemeToggle}>\r\n          {theme === 'light' ? 'üåô Dark Mode' : '‚òÄÔ∏è Light Mode'}\r\n        </button>\r\n      </header>\r\n      \r\n      <div className=\"template-selection container\">\r\n        <TemplateSelector \r\n          selectedTemplate={selectedTemplate} \r\n          onTemplateChange={handleTemplateChange}\r\n        />\r\n      </div>\r\n      \r\n      <div className=\"main-content container\">\r\n        <div className=\"row\">\r\n          <div className=\"form-container col-lg-6 mb-4\">\r\n            <ResumeForm \r\n              onSubmit={handleFormSubmit} \r\n              onChange={handleFormChange}\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"preview-container col-lg-6\">\r\n            {formData && (\r\n              <ResumePreview \r\n                formData={formData} \r\n                templateType={selectedTemplate}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      {isGenerating && (\r\n        <div className=\"generating-overlay\">\r\n          <div className=\"generating-message\">\r\n            <div className=\"spinner-border text-primary\" role=\"status\">\r\n              <span className=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n            <p className=\"mt-3\">Generating your ATS-friendly resume...</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {generatedFiles && !isGenerating && (\r\n        <div className=\"download-options container text-center my-4 p-4 rounded\">\r\n          <h2 className=\"mb-4\">Download Your Resume</h2>\r\n          <div className=\"download-buttons d-flex justify-content-center flex-wrap gap-3\">\r\n            {/* If LaTeX is missing and we have a client-generated PDF */}\r\n            {isLaTeXMissing && generatedFiles.clientPdf ? (\r\n              <button \r\n                onClick={() => window.open(generatedFiles.clientPdf, '_blank')} \r\n                className=\"btn btn-success btn-lg\"\r\n              >\r\n                <i className=\"bi bi-file-pdf\"></i> Download Client PDF\r\n              </button>\r\n            ) : (\r\n              generatedFiles.pdf && (\r\n                <button \r\n                  onClick={() => handleDownload('pdf', generatedFiles.pdf)} \r\n                  className=\"btn btn-success btn-lg\"\r\n                >\r\n                  <i className=\"bi bi-file-pdf\"></i> Download PDF\r\n                </button>\r\n              )\r\n            )}\r\n            \r\n            <button \r\n              onClick={() => handleDownload('tex', generatedFiles.tex)} \r\n              className=\"btn btn-primary btn-lg\"\r\n            >\r\n              <i className=\"bi bi-file-text\"></i> Download LaTeX Source\r\n            </button>\r\n            <button \r\n              onClick={() => handleDownload('txt', generatedFiles.txt)} \r\n              className=\"btn btn-secondary btn-lg\"\r\n            >\r\n              <i className=\"bi bi-file-text\"></i> Download Plain Text\r\n            </button>\r\n            \r\n            {/* Show LaTeX installation guide button if LaTeX is missing */}\r\n            {isLaTeXMissing && (\r\n              <button \r\n                onClick={() => setShowLaTeXGuide(true)} \r\n                className=\"btn btn-info btn-lg\"\r\n              >\r\n                <i className=\"bi bi-info-circle\"></i> LaTeX Installation Guide\r\n              </button>\r\n            )}\r\n          </div>\r\n          \r\n          {isLaTeXMissing && (\r\n            <div className=\"fallback-notice mt-3 alert alert-info\">\r\n              <p><strong>Note:</strong> The PDF was generated using a client-side fallback because LaTeX is not installed on your system. \r\n              For higher quality PDFs, please install LaTeX using the installation guide.</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n      \r\n      <footer className=\"app-footer mt-auto py-3 text-center\">\r\n        <p className=\"mb-0\">&copy; 2023 ResuMate. All rights reserved.</p>\r\n      </footer>\r\n      \r\n      {/* LaTeX Installation Guide Modal */}\r\n      {showLaTeXGuide && (\r\n        <LaTeXInstallGuide \r\n          onDismiss={handleCloseLaTeXGuide}\r\n          onUseClientSidePDF={handleUseClientSidePdf}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}